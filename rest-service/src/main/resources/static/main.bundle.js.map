{"version":3,"sources":["/home/bogdan/Stuff/IT/Angular/catalog-management-angular/src async","/home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/app/app-routing.module.ts","/home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/app/app.component.html","/home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/app/app.component.scss","/home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/app/app.component.ts","/home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/app/app.module.ts","/home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/app/main-page/main-page.component.html","/home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/app/main-page/main-page.component.scss","/home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/app/main-page/main-page.component.ts","/home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/app/user-login/user-login.component.html","/home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/app/user-login/user-login.component.scss","/home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/app/user-login/user-login.component.ts","/home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/environments/environment.ts","/home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/bogdan/Stuff/IT/Angular/catalog-management-angular/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: []\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/app/app-routing.module.ts","module.exports = \"<div class=\\\"content\\\">\\n  <div class=\\\"header-container\\\">\\n    <div class=\\\"left-col\\\">\\n      <img src=\\\"./assets/images/logo.png\\\" />\\n    </div>\\n    <div class=\\\"right-col\\\">\\n      <a routerLink=\\\"app-user-login\\\">User Login</a>\\n      <a routerLink=\\\"app-main-page\\\">Main Page</a>\\n      <a routerLink=\\\"\\\">About Us</a>\\n      <a routerLink=\\\"\\\">Contact Us</a>\\n    </div>\\n    <router-outlet></router-outlet>\\n  </div>\\n  <div class=\\\"main-content-container\\\">\\n    <div></div>\\n    <div>\\n      <div class=\\\"main-content-section\\\">\\n        <div>\\n          <h1>{{title}}</h1>\\n        </div>\\n      </div>\\n      <div></div>\\n    </div>\\n    <div class=\\\"footer-container\\\">\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".contentRows:hover {\\n  background-color: #53575e; }\\n\\n.blurred {\\n  -webkit-filter: blur(5px);\\n          filter: blur(5px); }\\n\\n.employeeModal {\\n  width: 20%;\\n  height: 20%;\\n  background-color: white;\\n  position: absolute;\\n  left: 25%;\\n  top: 25%;\\n  z-index: 999;\\n  border-radius: 25px;\\n  border: solid 1px #aaa; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = 1","import {Component, OnInit} from '@angular/core';\nimport 'rxjs/add/operator/startWith';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/operator/map';\nimport {HttpClient} from '@angular/common/http';\nimport {tokenReference} from '@angular/compiler';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent{\n  title = \"Welcome to Catalxog Management Application\";\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {MdTableModule} from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {HttpClientModule} from '@angular/common/http';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport {ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport { UserLoginComponent } from './user-login/user-login.component';\nimport { RouterModule} from '@angular/router';\nimport { MainPageComponent } from './main-page/main-page.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserLoginComponent,\n    MainPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    MdTableModule,\n    CdkTableModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    NgbModule,\n    RouterModule.forRoot([\n      {\n        path: '',\n        component: AppComponent\n      },\n      {\n        path:'app-user-login',\n        component: UserLoginComponent\n      },\n      {\n        path: 'app-main-page',\n        component: MainPageComponent\n      }\n   ]),\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/app/app.module.ts","module.exports = \"<div [ngClass]='classes'><h1 style='text-align: center; padding: 20px;'>All employees</h1>\\n  <div style='text-align: center; padding-bottom: 20px'>\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)='openAddBox()'>Add employee</button>\\n    <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)='refreshList();$event.target.blur()'>Refresh list</button>\\n  </div>\\n  <router-outlet></router-outlet>\\n  <div class='mat-elevation-z8' style='margin: 0 10% 0 10%'>\\n    <table class=\\\"table table-inverse\\\">\\n      <thead>\\n      <tr>\\n        <th>First Name</th>\\n        <th>Last Name</th>\\n        <th>Age</th>\\n        <th>Years</th>\\n        <th>Department</th>\\n        <th>Used Tehnology</th>\\n        <th>Company name</th>\\n        <th>Delete</th>\\n      </tr>\\n      </thead>\\n      <tbody>\\n      <tr class='contentRows' *ngFor='let employee of employees' (click)='openEditBox(employee)'>\\n        <td>{{employee.firstName}}</td>\\n        <td>{{employee.lastName}}</td>\\n        <td>{{employee.age}}</td>\\n        <td>{{employee.years}}</td>\\n        <td>{{employee.department}}</td>\\n        <td>{{employee.usedTechnology}}</td>\\n        <td>{{employee.companyEntity.name}}</td>\\n        <td><button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)='deleteEmployeeDirect(modalEmployee.id)'>Delete</button></td>\\n      </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\\n<div class='employeeModal' *ngIf='showEditBox'>\\n  <div class='row' style='padding-top: 5%'>\\n    <div class='col-2'></div>\\n    <div class='col-8'>\\n      <div class=\\\"row\\\" style='display: block'>\\n        <div class=\\\"container\\\">\\n          <form autocomplete=\\\"off\\\" spellcheck=\\\"false\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"formGroupExampleInput2\\\">First name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"formGroupExampleInput2\\\" [(ngModel)]='modalEmployee.firstName' name='firstName'>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"formGroupExampleInput3\\\">Last name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"formGroupExampleInput3\\\" [(ngModel)]='modalEmployee.lastName' name='lastName'>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"formGroupExampleInput4\\\">Age</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"formGroupExampleInput4\\\" [(ngModel)]='modalEmployee.age'\\n                     name='age'>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"formGroupExampleInput5\\\">Years in the company</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"formGroupExampleInput5\\\" [(ngModel)]='modalEmployee.years'\\n                     name='years'>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"formGroupExampleInput6\\\">Department</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"formGroupExampleInput6\\\" [(ngModel)]='modalEmployee.department'\\n                     name='department'>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"formGroupExampleInput7\\\">Used technology</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"formGroupExampleInput7\\\" [(ngModel)]='modalEmployee.usedTechnology'\\n                     name='usedTechnology'>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"formGroupExampleInput8\\\">Company</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"formGroupExampleInput8\\\" [(ngModel)]='modalEmployee.companyEntity.name'\\n                     name='company'>\\n            </div>\\n            <div class='row text-center pt-4'>\\n              <div class='col-4'>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)='updateEmployee(modalEmployee.id, modalEmployee)'>Apply changes\\n                </button>\\n              </div>\\n              <div class='col-4'>\\n                <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)='closeEditBox()'>Cancel</button>\\n              </div>\\n              <div class='col-4'>\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)='deleteEmployee(modalEmployee.id)'>Delete employee</button>\\n              </div>\\n            </div>\\n            <div class='row text-center pt-3'>\\n            </div>\\n          </form>\\n\\n        </div>\\n      </div>\\n    </div>\\n    <div class='col-2'></div>\\n\\n  </div>\\n</div>\\n\\n<div class='employeeModal' *ngIf='showAddBox'>\\n  <div class='row' style='padding-top: 5%'>\\n    <div class='col-2'></div>\\n    <div class='col-8'>\\n      <div class=\\\"row\\\" style='display: block'>\\n        <div class=\\\"container\\\">\\n          <form autocomplete=\\\"off\\\" spellcheck=\\\"false\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"formGroupExampleInput2\\\">First name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]='modalEmployee.firstName' name='firstName'>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"formGroupExampleInput3\\\">Last name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]='modalEmployee.lastName' name='lastName'>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"formGroupExampleInput4\\\">Age</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]='modalEmployee.age' name='age'>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"formGroupExampleInput5\\\">Years in the company</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]='modalEmployee.years' name='years'>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"formGroupExampleInput6\\\">Department</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]='modalEmployee.department' name='department'>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"formGroupExampleInput7\\\">Used Technology</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]='modalEmployee.usedTechnology' name='usedTechnology'>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"formGroupExampleInput8\\\">Company name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]='modalEmployee.companyEntity.name' name='company'>\\n            </div>\\n            <div class='row text-center pt-4'>\\n              <div class='col-6'>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)='addEmployee()'>Add employee</button>\\n              </div>\\n              <div class='col-6'>\\n                <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)='closeAddBox()'>Cancel</button>\\n              </div>\\n            </div>\\n            <div class='row text-center pt-3'>\\n            </div>\\n          </form>\\n\\n          <div *ngIf='error' class='text-center'>\\n            <p>\\n              <ngb-alert type='danger' [dismissible]=\\\"true\\\" (close)=\\\"closeAlert()\\\">\\n                <strong>Error!</strong> {{errorMessage}}\\n              </ngb-alert>\\n            </p>\\n\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class='col-2'></div>\\n\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/app/main-page/main-page.component.html\n// module id = ../../../../../src/app/main-page/main-page.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/app/main-page/main-page.component.scss\n// module id = ../../../../../src/app/main-page/main-page.component.scss\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html',\n  styleUrls: ['./main-page.component.scss']\n})\nexport class MainPageComponent implements OnInit {\n\n  private hostUrl = 'http://localhost:8080/employee';\n  employees;\n  showEditBox = false;\n  showAddBox = false;\n  classes;\n  modalEmployee = {id: '', firstName: '', lastName: '', age: '',years: '', department: '', usedTechnology: '', companyEntity: {id: '', name: ''}};\n  error = false;\n  errorMessage;\n\n  constructor(private http: HttpClient) {\n  }\n\n  ngOnInit(): void {\n    const url = `${this.hostUrl}/list`;\n    // Make the HTTP request:\n    this.http.get(url).subscribe(data => {\n      // Read the result field from the JSON response.\n      this.employees = data;\n    });\n  }\n\n  openEditBox(employee) {\n    this.showEditBox = true;\n    this.classes = 'blurred';\n    this.modalEmployee.id = employee.id;\n    this.modalEmployee.firstName = employee.firstName;\n    this.modalEmployee.lastName = employee.lastName;\n    this.modalEmployee.age = employee.age;\n    this.modalEmployee.years = employee.years;\n    this.modalEmployee.department = employee.department;\n    this.modalEmployee.usedTechnology = employee.usedTechnology;\n    this.modalEmployee.companyEntity.name = employee.companyEntity.name;\n  }\n\n  openAddBox() {\n    this.error = false;\n    this.showAddBox = true;\n    this.classes = 'blurred';\n    this.modalEmployee.id = '';\n    this.modalEmployee.firstName = '';\n    this.modalEmployee.lastName = '';\n    this.modalEmployee.age='';\n    this.modalEmployee.years='';\n    this.modalEmployee.department='';\n    this.modalEmployee.usedTechnology='';\n    this.modalEmployee.companyEntity.id = '';\n    this.modalEmployee.companyEntity.name = '';\n  }\n\n  closeEditBox() {\n    this.showEditBox = false;\n    this.classes = '';\n  }\n\n  addEmployee() {\n    const url = `${this.hostUrl}/add`;\n    this.error = false;\n    const body = this.modalEmployee;\n    this.http.post(url, body).subscribe(data => {\n        this.closeAddBox();\n        this.refreshList();\n      },\n      err => {\n        this.error = true;\n        this.errorMessage = err.error.message;\n      });\n  }\n\n  updateEmployee(id, updatedEmployee) {\n    const body = {\n      'id': id,\n      'firstName': updatedEmployee.firstName,\n      'lastName': updatedEmployee.lastName,\n      'age': updatedEmployee.age,\n      'years': updatedEmployee.years,\n      'department': updatedEmployee.department,\n      'usedTechnology': updatedEmployee.usedTechnology,\n      'companyEntity': {\n        'id': 1,\n        'name': 'Fortech'\n      }\n    };\n    this.http.put(this.hostUrl + id, body).subscribe(data => {\n      this.closeEditBox();\n      this.refreshList();\n    });\n  }\n\n  deleteEmployee(id) {\n    this.http.delete(this.hostUrl + id).subscribe(data => {\n      this.closeEditBox();\n      this.refreshList();\n    });\n  }\n\n  deleteEmployeeDirect(id) {\n    this.http.delete(this.hostUrl + id).subscribe(data => {\n      this.refreshList();\n    })\n  }\n\n  refreshList() {\n    this.http.get(this.hostUrl).subscribe(data => {\n      // Read the result field from the JSON response.\n      this.employees = data;\n    });\n  }\n\n  closeAddBox() {\n    this.error = false;\n    this.showAddBox = false;\n    this.classes = '';\n  }\n\n  closeAlert() {\n    this.error = false;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/app/main-page/main-page.component.ts","module.exports = \"<div>\\n    <form [formGroup]=\\\"formdata\\\" (ngSubmit) = \\\"onClickSubmit(formdata.value)\\\" >\\n       <header>Login</header>\\n       <label>Username <span>*</span></label>\\n       <input type=\\\"text\\\" name=\\\"uname\\\" formControlName=\\\"uname\\\" placeholder=\\\"At least 6 characters\\\"/>\\n       \\n       <label>Password <span>*</span></label>\\n       <input type=\\\"password\\\" class=\\\"fortextbox\\\" name=\\\"passwd\\\" formControlName=\\\"passwd\\\"/>\\n       \\n       <div class=\\\"help\\\">Use upper and lowercase lettes as well</div>\\n       <button [disabled]=\\\"!formdata.valid\\\" value=\\\"Login\\\">Login</button>\\n    </form>\\n </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/app/user-login/user-login.component.html\n// module id = ../../../../../src/app/user-login/user-login.component.html\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/app/user-login/user-login.component.scss\n// module id = ../../../../../src/app/user-login/user-login.component.scss\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-user-login',\n  templateUrl: './user-login.component.html',\n  styleUrls: ['./user-login.component.scss']\n})\nexport class UserLoginComponent implements OnInit {\n  formdata;\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n    this.formdata = new FormGroup({\n      uname: new FormControl(\"\", Validators.compose([\n        Validators.required,\n        Validators.minLength(6)\n      ])),\n      passwd: new FormControl(\"\", this.passwordValidation)\n    });\n  }\n\n  passwordValidation(formcontrol) {\n    if  (formcontrol.value.length < 5) {\n      return {\"passwd\" : true};\n    }\n  }\n\n  onClickSubmit(data) {\n    console.log(data.uname);\n    if  (data.uname === \"systemadmin\" && data.passwd == \"admin123\") {\n      alert(\"Login Successful\");\n      this.router.navigate(['app-main-page']);\n    } else {\n      alert(\"Invalid Login\");\n      return false;\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/app/user-login/user-login.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /home/bogdan/Stuff/IT/Angular/catalog-management-angular/src/main.ts"],"sourceRoot":"webpack:///"}